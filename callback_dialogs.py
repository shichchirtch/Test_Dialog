import asyncio

from aiogram.types import CallbackQuery
from aiogram_dialog import DialogManager, StartMode
from aiogram_dialog.widgets.kbd import Button, Select, ManagedCheckbox, ManagedMultiselect, ManagedRadio
from aiogram.fsm.context import FSMContext
from bot_instans import FSM_ST3, FSM_ST, FSM_ST5
from aiogram_dialog.api.exceptions import OutdatedIntent, NoContextError


async def go_back(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    await dialog_manager.back()


async def go_next(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    await dialog_manager.next()



async def go_first(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    await dialog_manager.switch_to(state=FSM_ST.start)


async def go_second(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    await dialog_manager.switch_to(state=FSM_ST.window_2)


async def go_third(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    await dialog_manager.switch_to(state=FSM_ST.window_3)


async def go_fourth(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    await dialog_manager.switch_to(state=FSM_ST.window_4)

# –•—ç–Ω–¥–ª–µ—Ä, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–î–∞'
async def yes_click_process(callback: CallbackQuery,
                            widget: Button,
                            dialog_manager: DialogManager):
    print('\n\nYes Handler')
    try:
        await callback.message.edit_text(
            text='<b>–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ!</b>\n\n–ù–∞–¥–µ—é—Å—å, –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤ —ç—Ç–æ–º –∫—É—Ä—Å–µ —á—Ç–æ-—Ç–æ '
                 '–Ω–æ–≤–æ–µ –∏ –ø–æ–ª–µ–∑–Ω–æ–µ –¥–ª—è —Å–µ–±—è!')
    except Exception:
        print('Exeption happend')

    await dialog_manager.done()


# –•—ç–Ω–¥–ª–µ—Ä, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ù–µ—Ç'
async def no_click_process(callback: CallbackQuery,
                           widget: Button,
                           dialog_manager: DialogManager):
    await callback.message.edit_text(
        text='<b>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ!</b>\n\n–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è!')
    await dialog_manager.done()

# –•—ç–Ω–¥–ª–µ—Ä, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
async def button_clicked(callback: CallbackQuery,
                           widget: Button,
                           dialog_manager: DialogManager):
    """–•—ç–Ω–¥–ª–µ—Ä –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –∫–æ–ª–±—ç–∫ —Å –Ω–∞–∂–∞—Ç–∏–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑ –¥–∏–∞–ª–æ–≥–∞ drei"""
    await callback.message.answer('drei dialog works\n\n –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã—à–µ üëÜ')
    await dialog_manager.next()

async def button_clicked_to_five(callback:CallbackQuery, widget:Button, dialog_manager:DialogManager):
    await callback.message.answer('–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¥–∏–∞–ª–æ–≥—É five')
    await dialog_manager.start(state=FSM_ST5.five)


async def category_selection(callback: CallbackQuery, widget: Select,
                             dialog_manager: DialogManager,   item_id: str):
    # print(type(item_id), item_id)
    await callback.message.answer(
        f'–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ù–∞–∑–≤–∞–Ω–∏–µ {item_id.split()[0]}  —Å id={item_id.split()[1]}')
    await asyncio.sleep(2)
    await dialog_manager.start(state=FSM_ST3.drei, mode=StartMode.RESET_STACK)





# –•—ç–Ω–¥–ª–µ—Ä, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –≤ –≤–∏–¥–∂–µ—Ç–µ `Checkbox`
async def checkbox_clicked(callback: CallbackQuery, checkbox: ManagedCheckbox,
                           dialog_manager: DialogManager):
    dialog_manager.dialog_data.update(is_checked=checkbox.is_checked())



async def category_filled(callback: CallbackQuery,
                          checkbox: ManagedMultiselect, manager: DialogManager, *args, **kwargs):
    chosen_topics = checkbox.get_checked()
    manager.dialog_data["multi_topics"] = chosen_topics # –í—Ä—É—á–Ω—É—é –æ–±–Ω–æ–≤–ª—è—é –∫–æ–Ω—Ç–µ–∫—Å—Ç
    print('sel top = ', manager.dialog_data["multi_topics"])  #  sel top =  ['–ò—Å–∫—É—Å—Å—Ç–≤–æ 6', '–ö—É–ª—å—Ç—É—Ä–∞ 5']



# –•—ç–Ω–¥–ª–µ—Ä, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
async def button_in_six_clicked(callback: CallbackQuery,  widget: Button,dialog_manager: DialogManager):
    """–•—ç–Ω–¥–ª–µ—Ä –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –∫–æ–ª–±—ç–∫ —Å –Ω–∞–∂–∞—Ç–∏–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑ –¥–∏–∞–ª–æ–≥–∞ six"""
    widget = dialog_manager.find('multi_topics')
    data = widget.get_checked()
    selected_topics = dialog_manager.current_context().dialog_data.get("multi_topics")
    print('selected_topics = ', selected_topics)  #  selected_topics =  ['–ò—Å–∫—É—Å—Å—Ç–≤–æ 6', '–ö—É–ª—å—Ç—É—Ä–∞ 5']
    state = dialog_manager.middleware_data["state"]  # state –ø–æ–ª—É—á–∞—é –∏–∑ middleware_data, –∞ –Ω–µ –∏–∑ FSMContext
    if selected_topics and len(selected_topics)>1:
        s = ''
        topic_list = []
        for tema in data:
            topic_name = tema.split()[0]
            topic_list.append(topic_name)
            t = '\n\n‚û°Ô∏è ' + topic_name
            s += ''.join(t)
        await callback.message.answer(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–µ–º—ã<b>{s}</b>')
        await asyncio.sleep(1)
        await state.update_data(topics=topic_list)
        us_dict = await state.get_data()
        print('us_dict = ', us_dict)  # us_dict = {'topics': ['–ò—Å–∫—É—Å—Å—Ç–≤–æ', '–û–±—â–µ—Å—Ç–≤–æ']}
        await callback.message.answer("–í–∞—à –≤—ã–±–æ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
        await dialog_manager.done()
    else:
        await callback.message.answer("–í—ã–±–∏—Ä–∏—Ç–µ –º–∏–Ω–∏–º—É–º 2 —Ç–µ–º—ã !")



async def radio_button_clicked(callback:CallbackQuery,
                           radio: ManagedRadio,
                           dialog_manager: DialogManager, *args, **kwargs):
    selected_language = radio.get_checked()
    state = dialog_manager.middleware_data["state"]
    lan_dict = {'1':'English', '2':'–†—É—Å—Å–∫–∏–π', '3':"Francosic"}

    await state.update_data(lan=lan_dict[selected_language])
    us_dict = await state.get_data()
    print('lan = ', us_dict['lan'])  # lan =  –†—É—Å—Å–∫–∏–π
    await asyncio.sleep(1)
    await dialog_manager.done()  # –ø–æ—Å–ª–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–ø–∞–¥–∞—é—Ç –∫–Ω–æ–ø–∫–∏
    await asyncio.sleep(1)
    await callback.message.answer(f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {us_dict['lan']}")













